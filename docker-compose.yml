---
services:
  wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE #optional
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - SERVERURL=wireguard.${DOMAIN} #optional
      # - SERVERPORT=51820 #optional
      - PEERS=${PEERS} #optional
      - PEERDNS=${DNS_IP1} #optional
      # - INTERNAL_SUBNET=10.13.13.0 #optional
      - ALLOWEDIPS=${ALLOWEDIPS}
      # - PERSISTENTKEEPALIVE_PEERS= #optional
      # - LOG_CONFS=true #optional
    volumes:
      - config:/config
      # - /lib/modules:/lib/modules #optional
    ports:
      - 51820:51820/udp
      - 51821:51821/tcp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: always
    networks:
      user-vlan:
        # ipv4_address: ${USER_VLAN_IP}
        # mac_address: ${USER_VLAN_MAC}
      # iot-vlan:
      #   ipv4_address: ${IOT_VLAN_IP}
      #   mac_address: ${IOT_VLAN_MAC}
      # cctv-vlan:
      #   ipv4_address: ${CCTV_VLAN_IP}
      #   mac_address: ${CCTV_VLAN_MAC}
      proxy-vlan:
        # ipv4_address: ${PROXY_VLAN_IP}
        # mac_address: ${PROXY_VLAN_MAC}
      # system-vlan:
      #   ipv4_address: ${SYSTEM_VLAN_IP}
      #   mac_address: ${SYSTEM_VLAN_MAC}
    dns:
      - ${DNS_IP1}
      - ${DNS_IP2}
    dns_search: ${DOMAIN}
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy-vlan
      - traefik.http.routers.wireguard.rule=Host(`wireguard.${DOMAIN}`)
      - traefik.http.services.wireguard.loadbalancer.server.port=51821
      - traefik.http.routers.wireguard.entrypoints=websecure
      - traefik.http.routers.wireguard.tls.certresolver=le_dns

networks:
  user-vlan:
    external: true
  # iot-vlan:
  #   external: true
  # cctv-vlan:
  #   external: true
  proxy-vlan:
    external: true
  # system-vlan:
  #   external: true